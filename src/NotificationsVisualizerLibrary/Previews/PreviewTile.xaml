<UserControl
    x:Class="NotificationsVisualizerLibrary.PreviewTile"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:NotificationsVisualizerLibrary.Controls"
    xmlns:converters="using:NotificationsVisualizerLibrary.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:NotificationsVisualizerLibrary"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="using:System"
    x:Name="previewTile"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <UserControl.Resources>

        <x:Double x:Key="ControlContentThemeFontSize">15</x:Double>
        <x:Double x:Key="ControlContentThemeSubtleOpacity">0.7</x:Double>
        <FontFamily x:Key="ContentControlThemeFontFamily">Segoe UI</FontFamily>

        <x:Double x:Key="BrandingHeight">28</x:Double>

        <converters:InvertConverter x:Key="InvertConverter" />
        <converters:FontSizeToHeightConverter x:Key="FontSizeToHeightConverter" />
        <converters:FontSizeToLineHeightConverter x:Key="FontSizeToLineHeightConverter" />
        <converters:TileSizeToTitleConverter x:Key="TileSizeToTitleConverter" />
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <converters:TilePixelSizeToClip x:Key="TilePixelSizeToClip" />

        <ExponentialEase x:Key="PeekEasingFunction" EasingMode="EaseOut" />

        <Storyboard
            x:Key="PeekStoryboard"
            AutoReverse="False"
            RepeatBehavior="0">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslateContent" Storyboard.TargetProperty="Y">

                <!--<EasingDoubleKeyFrame KeyTime="0:0:8" Value="-130"/>-->

                <!--  Peek image starts as displayed  -->
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />

                <!--  Peek image stays visible till now  -->
                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="0" />

                <!--  Then peek image is slidden out by now  -->
                <EasingDoubleKeyFrame
                    EasingFunction="{StaticResource PeekEasingFunction}"
                    KeyTime="0:0:4.0"
                    Value="{Binding TilePixelSize.Height, Converter={StaticResource InvertConverter}}" />

                <!--  Content stays visible till now  -->
                <EasingDoubleKeyFrame KeyTime="0:0:7.3" Value="{Binding TilePixelSize.Height, Converter={StaticResource InvertConverter}}" />

                <!--  Then peek image comes back down and stays visible forever  -->
                <EasingDoubleKeyFrame
                    EasingFunction="{StaticResource PeekEasingFunction}"
                    KeyTime="0:0:8.0"
                    Value="0" />

                <!--  Pull the peek image out  -->
                <!--<EasingDoubleKeyFrame KeyTime="0:0:6.7" Value="{Binding TilePixelSize.Height, Converter={StaticResource InvertConverter}}" EasingFunction="{StaticResource PeekEasingFunction}"/>-->
                <!--<EasingDoubleKeyFrame KeyTime="0:0:10.5" Value="{Binding TilePixelSize.Height, Converter={StaticResource InvertConverter}}">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>-->

            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="Typography.StylisticSet20" Value="True" />
            <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
            <Setter Property="Typography.CaseSensitiveForms" Value="True" />
            <Setter Property="LineHeight" Value="20" />
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
            <!--<Setter Property="TextLineBounds" Value="TrimToBaseline"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>-->
        </Style>


        <!--  Display name uses this  -->
        <Style
            x:Key="CaptionTextBlockStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="LineHeight" Value="16" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>

        <!--  Style for Button that contains tile, modified from Generic.xaml (Windows 10 15032)  -->
        <Style x:Key="DefaultTileButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemAccentColor}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>


    <Button
        Width="{Binding TilePixelSize.Width, ElementName=previewTile}"
        Height="{Binding TilePixelSize.Height, ElementName=previewTile}"
        Click="TileClick"
        Style="{StaticResource DefaultTileButtonStyle}">
        <Grid
            x:Name="LayoutRoot"
            Width="{Binding TilePixelSize.Width, ElementName=previewTile}"
            Height="{Binding TilePixelSize.Height, ElementName=previewTile}">

            <Grid
                x:Name="canvas"
                Width="{Binding TilePixelSize.Width, ElementName=previewTile}"
                Height="{Binding TilePixelSize.Height, ElementName=previewTile}"
                Clip="{Binding TilePixelSize, Converter={StaticResource TilePixelSizeToClip}, ElementName=previewTile}" />

            <!--  Branding  -->
            <Border>
                <Grid
                    x:Name="Branding"
                    Height="{StaticResource BrandingHeight}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        x:Name="TextBlockDisplayName"
                        Grid.Column="0"
                        Margin="8,0,0,5"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        TextTrimming="CharacterEllipsis" />

                    <Image
                        x:Name="CornerLogo"
                        Grid.Column="1"
                        Width="16"
                        Height="16"
                        Margin="4,2,2,5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Stretch="Uniform"
                        Visibility="Collapsed" />

                    <controls:BadgeValueControl
                        x:Name="badgeValueControl"
                        Grid.Column="2"
                        VerticalAlignment="Bottom" />

                </Grid>
            </Border>

        </Grid>
    </Button>
</UserControl>
